version: "3.2"
services:

  minio:
    image: bitnami/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_SERVER_HOST: localhost
      MINIO_SCHEME: http
      MINIO_API_CORS_ALLOW_ORIGIN: '*'
    networks:
      - mynet

  mc:
    image: minio/mc
    container_name: mc
    network_mode: host
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "  
      /usr/bin/mc config host add --api s3v2 minio http://localhost:9000/ minioadmin minioadmin;  
      /usr/bin/mc rm -r --force minio/first-bucket;  
      /usr/bin/mc mb -p minio/first-bucket; 
      /usr/bin/mc anonymous set public minio/first-bucket;  
      /usr/bin/mc admin trace minio --debug;  
      "

  mongodb:
    image: mongo:latest
    container_name: 'mongodb'
    ports:
      - 27017:27017
    networks:
      - mynet

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mynet
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 5

  backend:
    restart: always
    image: victor/backend:latest
    build:
      context: ./
    volumes:
      - .:/src
    depends_on:
      mongodb:
        condition: service_started
      minio:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      PORT: 4000
      AMQP_URL: amqp://guest:guest@rabbitmq:5672
      MONGO_URL: mongodb://mongodb:27017/mydb
      ACCESS_TOKEN_SECRET: somesecrethere
      BUCKET_HOST: http://localhost:9000/
      BUCKET_ENDPOINT: http://minio:9000/
      BUCKET_ACCESS_KEY: minioadmin
      BUCKET_SECRET_KEY: minioadmin
    ports:
      - 4000:4000
    networks:
      - mynet

networks:
  mynet:
    driver: bridge
